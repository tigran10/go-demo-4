pipeline {
    agent {
        kubernetes {
            label "builder-pod-${UUID.randomUUID().toString()}"
            defaultContainer 'jnlp'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: builder-pod
spec:
  containers:
  - name: helm
    image: vfarcic/helm:2.8.2
    command:
    - cat
    tty: true
  - name: git
    image: alpine/git
    command:
    - cat
    tty: true
  - name: kubectl
    image: vfarcic/kubectl
    command: ["cat"]
    tty: true
"""
        }
    }

    environment {
        uatAddr = "uat.go-demo-3.10.64.108.181.nip.io"
    }


    options {
        disableConcurrentBuilds()
        timeout(time: 45, unit: 'MINUTES')
    }

    stages {

        stage('Project') {
            steps {
                script {
                    def projectChoices = map.keySet().collect()
                    projectChoices.each {
                        releaseScopeChoices += it + '\n'
                    }

                    def project = choice(name: 'PROJECT', choices: ${projectChoices}, description: 'What service to deploy?')
                }
            }
        }

        stage("Version") {
            steps {
                container("helm") {
                    script {
                        projectVersions = sh(script: """  curl  https://api.github.com/repos/tigran10/go-demo-4/releases | jq -r ".[].tag_name" """, returnStdout: true).trim()
                        def projectVersion = choice(name: 'PROJECT_VERSION', choices: ${projectVersions}, description: 'What version ?')
                    }

                }
            }
        }


        stage("Environement") {
            steps {
                container("helm") {
                    ciK8sUpgrade(project, params.uatAddr, "${project}-uat", projectVersion)
                }
                container("kubectl") {
                    ciK8sRollout(project, "${project}-uat")
                }
            }

        }
    }


}


def projects = ["go-demo-3":
                        [ envs: [ build: "go-demo-3-build",
                                  uat: "go-demo-uat",
                                  prod: "go-demo-3-prod"
                        ]
                        ]
]

